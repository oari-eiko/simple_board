# バージョン指定
version: '3'

# 各コンテナ定義
services:
  # ---------------------------------
  # アプリケーションサーバー（Vue.js）
  # ---------------------------------
  app:
    # コンテナ名
    container_name: simple_board_app
    # Dockerfileからビルド
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    # ポート
    ports:
      - '${DEV_PORT}:${DEV_PORT}'
    # ボリューム（Bind Mounts）
    volumes:
      - ./docker/app/src:/app
    # 作業ディレクトリ
    working_dir: /app
    # 環境変数
    environment:
      - TZ=${TZ}
    # 指定コンテナの後に起動
    depends_on:
      - db
      - api
    tty: true

  # ---------------------------------
  # APIサーバー（Django）
  # ---------------------------------
  api:
    # コンテナ名
    container_name: simple_board_api
    # Dockerfileからビルド
    build:
      context: ./docker/api
      dockerfile: Dockerfile
    # ポート指定
    ports:
      - '${API_PORT}:${API_PORT}'
    # ボリューム（Bind Mounts）
    volumes:
      - ./docker/api/src:/api
    # 作業ディレクトリ
    working_dir: /api
    # 指定コンテナの後に起動
    depends_on:
      - db
    # 環境変数
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SQL_DATABASE=${SQL_DATABASE}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - TZ=${TZ}
      - DEV_PORT=${DEV_PORT}
      - APP_PORT=${APP_PORT}
    # サーバーを立ち上げる
    command: gunicorn --config /api/gunicorn.py

  # ---------------------------------
  # Webサーバー(Nginx)
  # ---------------------------------
  web:
    # コンテナ名
    container_name: simple_board_web
    # 公式イメージからビルド
    build:
      context: ./
      dockerfile: ./docker/web/Dockerfile
    # ポート指定（ホスト:コンテナ）
    ports:
      - '${APP_PORT}:${WEB_PORT}'
    # ボリューム（Bind Mounts）
    volumes:
      - ./docker/web/logs:/var/log/nginx     # ログフォルダー
    # 環境変数
    environment:
      - TZ=${TZ}
    # 指定コンテナ起動完了後に起動
    depends_on:
      - app
      - db

  # ---------------------------------
  # データベース(PostgreSQL)
  # ---------------------------------
  db:
    # コンテナ名
    container_name: simple_board_db
    # 公式イメージからビルド
    image: postgres:14
    # ポート指定（コンテナ）
    ports:
      - '${DB_PORT}:${DB_PORT}'
    # ボリューム（Bind Mounts）
    volumes:
      - ./docker/db/data:/var/lib/postgresql/data                       # データ
      - ./docker/db/sql:/docker-entrypoint-initdb.d                     # 初期化SQL
      - ./docker/db/postgresql.conf:/etc/postgresql/postgresql.conf     # 設定ファイル
    # 環境変数
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=${TZ}

  # ---------------------------------
  # クライアントツール(pgAdmin)
  # ---------------------------------
  client:
    # コンテナ名
    container_name: simple_board_client
    # 公式イメージからビルド
    image: dpage/pgadmin4
    # ポート指定（ホスト:コンテナ）
    ports:
      - '${CLIENT_PORT}:${WEB_PORT}'
    # ボリューム（Bind Mounts）
    volumes:
      - ./docker/client/pgadmin:/var/lib/pgadmin
    # 環境変数
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - TZ=${TZ}
    # 指定コンテナ起動完了後に起動
    depends_on:
      - db
